// Generated with ComposableExtensions (0.7.2) https://github.com/jbtule/ComposableExtensions

module Composable.Linq.ParallelEnumerable
let inline aggregate (func:'TSource->'TSource->'TSource) source = System.Linq.ParallelEnumerable.Aggregate(source, System.Func<'TSource, 'TSource, 'TSource>(func))
let inline all (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.All(source, System.Func<'TSource, System.Boolean>(predicate))
let inline any source = System.Linq.ParallelEnumerable.Any(source)
let inline asEnumerable source = System.Linq.ParallelEnumerable.AsEnumerable(source)
let inline asSequential source = System.Linq.ParallelEnumerable.AsSequential(source)
let inline asUnordered source = System.Linq.ParallelEnumerable.AsUnordered(source)
let inline cast source = System.Linq.ParallelEnumerable.Cast(source)
let inline contains value source = System.Linq.ParallelEnumerable.Contains(source, value)
let inline count source = System.Linq.ParallelEnumerable.Count(source)
let inline defaultIfEmpty source = System.Linq.ParallelEnumerable.DefaultIfEmpty(source)
let inline distinct source = System.Linq.ParallelEnumerable.Distinct(source)
let inline elementAt index source = System.Linq.ParallelEnumerable.ElementAt(source, index)
let inline elementAtOrDefault index source = System.Linq.ParallelEnumerable.ElementAtOrDefault(source, index)
let inline first source = System.Linq.ParallelEnumerable.First(source)
let inline firstOrDefault source = System.Linq.ParallelEnumerable.FirstOrDefault(source)
let inline forAll action source = System.Linq.ParallelEnumerable.ForAll(source, action)
let inline groupBy (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.GroupBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline last source = System.Linq.ParallelEnumerable.Last(source)
let inline lastOrDefault source = System.Linq.ParallelEnumerable.LastOrDefault(source)
let inline longCount source = System.Linq.ParallelEnumerable.LongCount(source)
let inline ofType source = System.Linq.ParallelEnumerable.OfType(source)
let inline orderBy (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.OrderBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline orderByDescending (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.OrderByDescending(source, System.Func<'TSource, 'TKey>(keySelector))
let inline reverse source = System.Linq.ParallelEnumerable.Reverse(source)
let inline single source = System.Linq.ParallelEnumerable.Single(source)
let inline singleOrDefault source = System.Linq.ParallelEnumerable.SingleOrDefault(source)
let inline skip count source = System.Linq.ParallelEnumerable.Skip(source, count)
let inline take count source = System.Linq.ParallelEnumerable.Take(source, count)
let inline thenBy (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.ThenBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline thenByDescending (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.ThenByDescending(source, System.Func<'TSource, 'TKey>(keySelector))
let inline toArray source = System.Linq.ParallelEnumerable.ToArray(source)
let inline toDictionary (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.ToDictionary(source, System.Func<'TSource, 'TKey>(keySelector))
let inline toList source = System.Linq.ParallelEnumerable.ToList(source)
let inline toLookup (keySelector:'TSource->'TKey) source = System.Linq.ParallelEnumerable.ToLookup(source, System.Func<'TSource, 'TKey>(keySelector))
let inline withCancellation cancellationToken source = System.Linq.ParallelEnumerable.WithCancellation(source, cancellationToken)
let inline withDegreeOfParallelism degreeOfParallelism source = System.Linq.ParallelEnumerable.WithDegreeOfParallelism(source, degreeOfParallelism)
let inline withExecutionMode executionMode source = System.Linq.ParallelEnumerable.WithExecutionMode(source, executionMode)
let inline withMergeOptions mergeOptions source = System.Linq.ParallelEnumerable.WithMergeOptions(source, mergeOptions)

module Full =
    let inline aggregate seed (func:'TAccumulate->'TSource->'TAccumulate) (resultSelector:'TAccumulate->'TResult) source = System.Linq.ParallelEnumerable.Aggregate(source, seed, System.Func<'TAccumulate, 'TSource, 'TAccumulate>(func), System.Func<'TAccumulate, 'TResult>(resultSelector))
    let inline any (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.Any(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline contains value comparer source = System.Linq.ParallelEnumerable.Contains(source, value, comparer)
    let inline count (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.Count(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline defaultIfEmpty defaultValue source = System.Linq.ParallelEnumerable.DefaultIfEmpty(source, defaultValue)
    let inline distinct comparer source = System.Linq.ParallelEnumerable.Distinct(source, comparer)
    let inline first (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.First(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline firstOrDefault (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.FirstOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline groupBy (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) (resultSelector:'TKey->System.Collections.Generic.IEnumerable<'TElement>->'TResult) comparer source = System.Linq.ParallelEnumerable.GroupBy(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), System.Func<'TKey, System.Collections.Generic.IEnumerable<'TElement>, 'TResult>(resultSelector), comparer)
    let inline last (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.Last(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline lastOrDefault (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.LastOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline longCount (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.LongCount(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline orderBy (keySelector:'TSource->'TKey) comparer source = System.Linq.ParallelEnumerable.OrderBy(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline orderByDescending (keySelector:'TSource->'TKey) comparer source = System.Linq.ParallelEnumerable.OrderByDescending(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline single (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.Single(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline singleOrDefault (predicate:'TSource->System.Boolean) source = System.Linq.ParallelEnumerable.SingleOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline thenBy (keySelector:'TSource->'TKey) comparer source = System.Linq.ParallelEnumerable.ThenBy(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline thenByDescending (keySelector:'TSource->'TKey) comparer source = System.Linq.ParallelEnumerable.ThenByDescending(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline toDictionary (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) comparer source = System.Linq.ParallelEnumerable.ToDictionary(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), comparer)
    let inline toLookup (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) comparer source = System.Linq.ParallelEnumerable.ToLookup(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), comparer)
