// Generated with ComposableExtensions (0.6.3) https://github.com/jbtule/ComposableExtensions

module Composable.Linq.ParallelEnumerable
let inline aggregate source (func:'TSource->'TSource->'TSource) = System.Linq.ParallelEnumerable.Aggregate(source, System.Func<'TSource, 'TSource, 'TSource>(func))
let inline all source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.All(source, System.Func<'TSource, System.Boolean>(predicate))
let inline any source = System.Linq.ParallelEnumerable.Any(source)
let inline asEnumerable source = System.Linq.ParallelEnumerable.AsEnumerable(source)
let inline asSequential source = System.Linq.ParallelEnumerable.AsSequential(source)
let inline asUnordered source = System.Linq.ParallelEnumerable.AsUnordered(source)
let inline cast source = System.Linq.ParallelEnumerable.Cast(source)
let inline contains source value = System.Linq.ParallelEnumerable.Contains(source, value)
let inline count source = System.Linq.ParallelEnumerable.Count(source)
let inline defaultIfEmpty source = System.Linq.ParallelEnumerable.DefaultIfEmpty(source)
let inline distinct source = System.Linq.ParallelEnumerable.Distinct(source)
let inline elementAt source index = System.Linq.ParallelEnumerable.ElementAt(source, index)
let inline elementAtOrDefault source index = System.Linq.ParallelEnumerable.ElementAtOrDefault(source, index)
let inline first source = System.Linq.ParallelEnumerable.First(source)
let inline firstOrDefault source = System.Linq.ParallelEnumerable.FirstOrDefault(source)
let inline forAll source action = System.Linq.ParallelEnumerable.ForAll(source, action)
let inline groupBy source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.GroupBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline last source = System.Linq.ParallelEnumerable.Last(source)
let inline lastOrDefault source = System.Linq.ParallelEnumerable.LastOrDefault(source)
let inline longCount source = System.Linq.ParallelEnumerable.LongCount(source)
let inline ofType source = System.Linq.ParallelEnumerable.OfType(source)
let inline orderBy source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.OrderBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline orderByDescending source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.OrderByDescending(source, System.Func<'TSource, 'TKey>(keySelector))
let inline reverse source = System.Linq.ParallelEnumerable.Reverse(source)
let inline single source = System.Linq.ParallelEnumerable.Single(source)
let inline singleOrDefault source = System.Linq.ParallelEnumerable.SingleOrDefault(source)
let inline skip source count = System.Linq.ParallelEnumerable.Skip(source, count)
let inline take source count = System.Linq.ParallelEnumerable.Take(source, count)
let inline thenBy source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.ThenBy(source, System.Func<'TSource, 'TKey>(keySelector))
let inline thenByDescending source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.ThenByDescending(source, System.Func<'TSource, 'TKey>(keySelector))
let inline toArray source = System.Linq.ParallelEnumerable.ToArray(source)
let inline toDictionary source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.ToDictionary(source, System.Func<'TSource, 'TKey>(keySelector))
let inline toList source = System.Linq.ParallelEnumerable.ToList(source)
let inline toLookup source (keySelector:'TSource->'TKey) = System.Linq.ParallelEnumerable.ToLookup(source, System.Func<'TSource, 'TKey>(keySelector))
let inline withCancellation source cancellationToken = System.Linq.ParallelEnumerable.WithCancellation(source, cancellationToken)
let inline withDegreeOfParallelism source degreeOfParallelism = System.Linq.ParallelEnumerable.WithDegreeOfParallelism(source, degreeOfParallelism)
let inline withExecutionMode source executionMode = System.Linq.ParallelEnumerable.WithExecutionMode(source, executionMode)
let inline withMergeOptions source mergeOptions = System.Linq.ParallelEnumerable.WithMergeOptions(source, mergeOptions)

module Full =
    let inline aggregate source seed (func:'TAccumulate->'TSource->'TAccumulate) (resultSelector:'TAccumulate->'TResult) = System.Linq.ParallelEnumerable.Aggregate(source, seed, System.Func<'TAccumulate, 'TSource, 'TAccumulate>(func), System.Func<'TAccumulate, 'TResult>(resultSelector))
    let inline any source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.Any(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline contains source value comparer = System.Linq.ParallelEnumerable.Contains(source, value, comparer)
    let inline count source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.Count(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline defaultIfEmpty source defaultValue = System.Linq.ParallelEnumerable.DefaultIfEmpty(source, defaultValue)
    let inline distinct source comparer = System.Linq.ParallelEnumerable.Distinct(source, comparer)
    let inline first source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.First(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline firstOrDefault source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.FirstOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline groupBy source (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) (resultSelector:'TKey->System.Collections.Generic.IEnumerable<'TElement>->'TResult) comparer = System.Linq.ParallelEnumerable.GroupBy(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), System.Func<'TKey, System.Collections.Generic.IEnumerable<'TElement>, 'TResult>(resultSelector), comparer)
    let inline last source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.Last(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline lastOrDefault source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.LastOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline longCount source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.LongCount(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline orderBy source (keySelector:'TSource->'TKey) comparer = System.Linq.ParallelEnumerable.OrderBy(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline orderByDescending source (keySelector:'TSource->'TKey) comparer = System.Linq.ParallelEnumerable.OrderByDescending(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline single source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.Single(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline singleOrDefault source (predicate:'TSource->System.Boolean) = System.Linq.ParallelEnumerable.SingleOrDefault(source, System.Func<'TSource, System.Boolean>(predicate))
    let inline thenBy source (keySelector:'TSource->'TKey) comparer = System.Linq.ParallelEnumerable.ThenBy(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline thenByDescending source (keySelector:'TSource->'TKey) comparer = System.Linq.ParallelEnumerable.ThenByDescending(source, System.Func<'TSource, 'TKey>(keySelector), comparer)
    let inline toDictionary source (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) comparer = System.Linq.ParallelEnumerable.ToDictionary(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), comparer)
    let inline toLookup source (keySelector:'TSource->'TKey) (elementSelector:'TSource->'TElement) comparer = System.Linq.ParallelEnumerable.ToLookup(source, System.Func<'TSource, 'TKey>(keySelector), System.Func<'TSource, 'TElement>(elementSelector), comparer)
